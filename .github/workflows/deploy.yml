name: CI/CD with Terraform
on:
  push:
    branches:
     - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  AWS_REGION: us-east-2

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME" -backend-config="region=us-east-2"
        working-directory: ./Terraform
      - name: Terraform plan
        id: plan
        run: |
          terraform plan \
          -var="region=${{ env.AWS_REGION }}" \
          -var="public_key=${{ env.PUBLIC_SSH_KEY }}" \
          -var="private_key=${{ env.PRIVATE_SSH_KEY }}" \
          -var="key_name=deployer-key" \
          -out=PLAN
        working-directory: ./Terraform
      - name: Terraform Apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./Terraform
  deploy-app:
        runs-on: ubuntu-latest
        needs: deploy-infra
        steps:
          - name: Checkout
            uses: actions/checkout@v3
          - name: Login to AWS ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1
          - name: Deploy docker image to EC2
            env:
              REGISTRY: illasoft
              REPOSITORY: illa-builder
              IMAGE_TAG: main
              AWS_DEFAULT_REGION: us-east-2
            uses: appleboy/ssh-action@v1.2.0
            with:
              host: "18.188.92.161"
              username: ubuntu
              key: ${{ env.PRIVATE_SSH_KEY }}
              envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG, AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
              script: |
                sudo apt update
                sudo apt install docker.io -y
                sudo apt install awscli -y 
                sudo $(aws ecr get-login-password --no-include-email --region us-east-2);
                sudo docker stop kailinuxappcontainer || true
                sudo docker rm kailinuxappcontainer || true
                sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
                sudo mkdir -p ~/illa/database
                sudo mkdir -p ~/illa/drive
                sudo docker run -d -p 80:2022 --name kailinuxappcontainer -v ~/illa/database:/opt/illa/database -v ~/illa/drive:/opt/illa/drive $REGISTRY/$REPOSITORY:$IMAGE_TAG



          

    

